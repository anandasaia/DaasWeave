"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Lazy = exports.Promisy = void 0;
const objects_1 = require("./objects");
var Promisy;
(function (Promisy) {
    // If promisy is null or undefined, throws NillableError, else
    // returns value from Promisy.
    function resolve(promisy) {
        return __awaiter(this, void 0, void 0, function* () {
            const fov = objects_1.objects.requireNonNil(promisy);
            const awaitable = typeof fov === "function" ? fov() : fov;
            return yield awaitable;
        });
    }
    Promisy.resolve = resolve;
    // If promisy is null or undefined, returns a rejected
    // Promise else returns result of resolve(promisy)
    function resolveOrReject(promisy) {
        return __awaiter(this, void 0, void 0, function* () {
            return objects_1.objects.isNil(promisy) ?
                Promise.reject(new objects_1.NillableError()) :
                resolve(promisy);
        });
    }
    Promisy.resolveOrReject = resolveOrReject;
})(Promisy || (exports.Promisy = Promisy = {}));
var Lazy;
(function (Lazy) {
    function of(promisy) {
        return () => {
            const fn = objects_1.objects.requireNonNil(promisy);
            return typeof fn === "function" ? fn() : fn;
        };
    }
    Lazy.of = of;
})(Lazy || (exports.Lazy = Lazy = {}));
//# sourceMappingURL=types.js.map