import { NonNil } from "./types";
declare const NillablErrorSymbol: unique symbol;
export declare class NillableError extends Error {
    constructor(message?: NonNil<string>);
    private get [NillablErrorSymbol]();
}
export declare const objects: {
    isNilError: (error: Error) => boolean;
    isNil: <T>(value: T) => boolean;
    isNotNil: <T_1>(value: T_1) => boolean;
    requireNonNil: <T_2>(value: T_2, message?: string | ((v: T_2) => Error) | undefined) => NonNil<T_2>;
    requireNonNilNumber: <T_3>(value: T_3, message?: string | ((v: T_3) => Error) | undefined) => NonNil<number>;
};
export {};
