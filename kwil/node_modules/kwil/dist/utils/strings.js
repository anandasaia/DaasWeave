"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.strings = void 0;
const objects_1 = require("./objects");
exports.strings = {
    is: (value) => {
        return typeof value === 'string';
    },
    // If value is null or undefined, then an error is thrown, else
    // value is returned.
    requireNonNil: (value, message) => {
        if (exports.strings.is(value)) {
            return value;
        }
        if (typeof message === 'function') {
            throw message();
        }
        throw new Error("value is not a string, it is a " + (!value ? 'null or undefined' : typeof value));
    },
    // If value is null or undefined, then an error is thrown, else
    // value is returned.
    requireNonNilElse: (value, defaultValue) => {
        if (!objects_1.objects.isNil(value)) {
            // @ts-ignore: Unreachable code error
            return value;
        }
        if (typeof defaultValue === 'function') {
            defaultValue(value);
        }
        if (exports.strings.is(defaultValue)) {
            return defaultValue;
        }
        throw new Error("defaultValue is not a string, it is a " + (!value ? 'null or undefined' : typeof value));
    },
    // NOTE: Will throw an exception if not a string/null/undefined.
    isNilOrEmpty: (value) => {
        if (objects_1.objects.isNil(value)) {
            return true;
        }
        if (exports.strings.is(value)) {
            return value === '';
        }
        throw new Error("value is not a string or null, it is a " + (!value ? 'undefined' : typeof value));
    },
    // NOTE: Will throw an exception if not a string/null/undefined.
    isNilOrWhitespace: (value) => {
        // @ts-ignore: Unreachable code error
        return exports.strings.isNilOrEmpty(value) || value.trim().length === 0;
    },
};
//# sourceMappingURL=strings.js.map