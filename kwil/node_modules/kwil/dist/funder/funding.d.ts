import { BigNumberish, ethers, Signer } from "ethers";
import { FundingConfig } from "../core/configs";
import { AllowanceRes, BalanceRes, DepositRes, TokenRes } from "./types";
import { Signer as Signerv5, Wallet as Walletv5 } from "ethers5";
/**
 * `Funder` class helps manage the funding process for a user's account on Kwil.
 */
export declare class Funder {
    private readonly signer;
    private readonly poolAddress;
    private readonly providerAddress;
    private erc20Contract?;
    private escrowContract?;
    private constructor();
    static create(signer: Signer | ethers.Wallet | Signerv5 | Walletv5, config: FundingConfig): Promise<Funder>;
    /**
     * Retrieves the token allowance for a particular address.
     *
     * @param address - The address to check the allowance for.
     * @returns A promise that resolves to the allowance result.
     */
    getAllowance(address: string): Promise<AllowanceRes>;
    /**
     * Retrieves the wallet token balance for a particular address. The token is the token used for funding on the configured Kwil provider.
     *
     * @param address - The address to check the balance for.
     * @returns A promise that resolves to the wallet token balance.
     */
    getBalance(address: string): Promise<BalanceRes>;
    /**
    * Approves / set allowance for a certain amount of tokens for transfer.
    *
    * @param amount - The amount to approve for transfer.
    * @returns A promise that resolves to the transaction response.
    */
    approve(amount: BigNumberish): Promise<ethers.ContractTransactionResponse>;
    /**
     * Deposits a certain amount of tokens. Funds must be approved before depositing.
     *
     * @param amount - The amount to deposit.
     * @returns A promise that resolves to the transaction response.
     */
    deposit(amount: BigNumberish): Promise<ethers.ContractTransactionResponse>;
    /**
     * Retrieves the deposited balance for a particular address.
     *
     * @param address - The address to check the deposited balance for.
     * @returns A promise that resolves to the deposited balance result.
     */
    getDepositedBalance(address: string): Promise<DepositRes>;
    /**
     * Retrieves the address of the token contract for the configured Kwil provider.
     *
     * @returns A promise that resolves to the token address result.
     */
    getTokenAddress(): Promise<TokenRes>;
}
