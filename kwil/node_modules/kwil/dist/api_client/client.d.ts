import { Account } from "../core/account";
import { FundingConfig } from "../core/configs";
import { Database, SelectQuery } from "../core/database";
import { Transaction, TxReceipt } from "../core/tx";
import { Api } from "./api";
import { Config } from "./config";
import { GenericResponse } from "../core/resreq";
export default class Client extends Api {
    constructor(opts: Config);
    getFundingConfig(): Promise<GenericResponse<FundingConfig>>;
    getSchema(dbid: string): Promise<GenericResponse<Database<string>>>;
    getAccount(owner: string): Promise<GenericResponse<Account>>;
    listDatabases(owner: string): Promise<GenericResponse<string[]>>;
    estimateCost(tx: Transaction): Promise<GenericResponse<string>>;
    broadcast(tx: Transaction): Promise<GenericResponse<TxReceipt>>;
    ping(): Promise<GenericResponse<string>>;
    selectQuery(query: SelectQuery): Promise<GenericResponse<string>>;
}
