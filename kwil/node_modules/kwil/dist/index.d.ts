import { NodeKwil } from './client/node/nodeKwil';
import { WebKwil } from './client/web/webKwil';
import { generateDBID } from './utils/dbid';
import { TxReceipt as _TxReceipt } from './core/tx';
import { Funder as _Funder } from './funder/funding';
import { ActionBuilder as _ActionBuilder, DBBuilder as _DBBuilder } from './core/builders';
import { ActionInput as _ActionInput } from './core/actionInput';
import { Transaction as _Transaction } from './core/tx';
import { Database as _Database, Table as _Table, Column as _Column, Attribute as _Attribute, Index as _Index, ActionSchema as _ActionSchema, SelectQuery as _SelectQuery } from './core/database';
import { GenericResponse as _GenericResponse } from './core/resreq';
declare namespace Types {
    type TxReceipt = _TxReceipt;
    type Funder = _Funder;
    type ActionBuilder = _ActionBuilder;
    type ActionInput = _ActionInput;
    type DBBuilder = _DBBuilder;
    type Transaction = _Transaction;
    type Database<T> = _Database<T>;
    type Table<T> = _Table<T>;
    type Column<T> = _Column<T>;
    type Attribute<T> = _Attribute<T>;
    type Index = _Index;
    type ActionSchema = _ActionSchema;
    type SelectQuery = _SelectQuery;
    type GenericResponse<T> = _GenericResponse<T>;
}
declare const Utils: {
    /**
     * `ActionInput` class is a utility class for creating action inputs.
     */
    ActionInput: typeof _ActionInput;
    /**
     * Generates a unique database identifier (DBID) from the provided owner's Ethereum wallet address and a database name.
     */
    generateDBID: typeof generateDBID;
};
export { NodeKwil, WebKwil, Types, Utils };
