import { DBBuilder, SignerSupplier } from "../core/builders";
import { NonNil } from "../utils/types";
import { Kwil } from "../client/kwil";
import { DropDbPayload } from "../core/tx";
import { Transaction } from "../core/tx";
export declare class DropDBBuilderImpl implements DBBuilder {
    private readonly client;
    private _payload;
    private _signer;
    private constructor();
    static of(client: NonNil<Kwil>): NonNil<DBBuilder>;
    signer(signer: SignerSupplier): NonNil<DBBuilder>;
    payload(payload: (() => NonNil<DropDbPayload>) | NonNil<DropDbPayload>): NonNil<DBBuilder>;
    buildTx(): Promise<Transaction>;
}
