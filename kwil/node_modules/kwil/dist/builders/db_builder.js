"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DBBuilderImpl = void 0;
const tx_1 = require("../core/tx");
const types_1 = require("../utils/types");
const objects_1 = require("../utils/objects");
const transaction_builder_1 = require("./transaction_builder");
/**
 * `DBBuilderImpl` class is an implementation of the `DBBuilder` interface.
 * It creates a transaction to deploy a new database on the Kwil network.
 */
class DBBuilderImpl {
    constructor(client) {
        this._payload = null;
        this._signer = null;
        this.client = client;
    }
    static of(client) {
        return new DBBuilderImpl(objects_1.objects.requireNonNil(client));
    }
    signer(signer) {
        this._signer = objects_1.objects.requireNonNil(signer);
        return this;
    }
    payload(payload) {
        this._payload = typeof objects_1.objects.requireNonNil(payload) !== "function" ?
            () => payload :
            payload;
        return this;
    }
    buildTx() {
        return __awaiter(this, void 0, void 0, function* () {
            const payload = objects_1.objects.requireNonNil(this._payload);
            const signer = yield types_1.Promisy.resolveOrReject(this._signer);
            return transaction_builder_1.TxnBuilderImpl
                .of(this.client)
                .payloadType(tx_1.PayloadType.DEPLOY_DATABASE)
                .payload(objects_1.objects.requireNonNil(payload))
                .signer(objects_1.objects.requireNonNil(signer))
                .build();
        });
    }
}
exports.DBBuilderImpl = DBBuilderImpl;
//# sourceMappingURL=db_builder.js.map