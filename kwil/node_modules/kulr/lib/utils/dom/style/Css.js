"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * add a CSS class to an element
 * @param element
 * @param className
 */
function addClass(element, className) {
    //  check we have a valid element
    if (!element) return false;
    //  add class name to list
    element.classList.add(className);
}
exports.addClass = addClass;
/**
 * remove a CSS class from an element
 * @param element
 * @param className
 * @returns {boolean}
 */
function removeClass(element, className) {
    //  check we have a valid element
    if (!element) return false;
    //  remove class name from list
    element.classList.remove(className);
}
exports.removeClass = removeClass;
/**
 * toggle the presence of a CSS class on an element
 * @param element
 * @param className
 * @param toggle
 */
function toggleClass(element, className, add) {
    var has_class;
    //  check whether a manual override of toggle value has been supplied
    if (add !== undefined) {
        //  if so, add or remove the class according to the user's request
        add ? addClass(element, className) : removeClass(element, className);
        //  stop here
        return;
    }
    //  does the element currently have this class?
    has_class = hasClass(element, className);
    //  add or remove the class as appropriate
    if (has_class === false) {
        addClass(element, className);
    } else {
        removeClass(element, className);
    }
    //  return the new state
    return !has_class;
}
exports.toggleClass = toggleClass;
/**
 * check if an element already has a particular class name
 * @param element
 * @param className
 * @returns {any}
 */
function hasClass(element, className) {
    //  check we have a valid element
    if (!element) return false;
    //  check whether the element's class list contains the provided class name
    return element.classList.contains(className);
}
exports.hasClass = hasClass;