"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var log = require("loglevel");
var lodash_1 = require("lodash");
var UniqueId_1 = require("../utils/UniqueId");
var Find_1 = require("../utils/dom/element/Find");
var Subject_1 = require("rxjs/Subject");
//  define some default options
var defaultOptions = {
    id: null,
    elements: {
        selector: null
    },
    actions: {
        liveUpdate: true
    },
    defaultColour: '#333333'
};
/**
 * validate the options passed in by the user
 * @param options
 * @return {boolean}
 */
function validateOptions(options) {
    try {
        //  test whether we can find the target element for the picker
        var element = Find_1.findOne(options.elements.selector);
        //  if no element is found, return false
        if (!element) return false;
        //  populate some defaults in the options
        lodash_1.defaultsDeep(options, defaultOptions);
        //  override specific properties if they don't exist
        options.id = options.id || UniqueId_1.getUniqueId();
        //  create an observable subject in the options object to help us destroy the instance
        options.destroy = new Subject_1.Subject();
        //  return the target element as a boolean
        return true;
    } catch (e) {
        log.warn('kulr/creation error', e.message);
    }
}
exports.validateOptions = validateOptions;