"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var TonePane_1 = require("./tone-pane/TonePane");
var HuePane_1 = require("./hue-pane/HuePane");
var Find_1 = require("../../utils/dom/element/Find");
var HexField_1 = require("./hex-field/HexField");
var ColourSwatch_1 = require("../swatch/ColourSwatch");
var Observables_1 = require("../../state/Observables");
var Toggle_1 = require("./toggle/Toggle");
var Constants_1 = require("../../constants/Constants");
var Confirm_1 = require("../buttons/Confirm");
var Cancel_1 = require("../buttons/Cancel");
/**
 * create a basic colour picker
 * @param options
 */
function createBasicColourPicker(options) {
    //  populate the toggle button
    Toggle_1.createToggle(options);
    //  create the popup elements
    createPopup(options);
    //  add listeners
    addListeners(options);
    //  add confirm and cancel buttons
    Confirm_1.createConfirmButton(options);
    Cancel_1.createCancelButton(options);
}
exports.createBasicColourPicker = createBasicColourPicker;
/**
 * create the popup elements
 * @param options
 */
function createPopup(options) {
    //  create popup components
    TonePane_1.createTonePane(options);
    HuePane_1.createHuePane(options);
    //  create colour swatch and text input
    ColourSwatch_1.createColourSwatches(options);
    HexField_1.createHexField(options);
}
/**
 * listen for signals
 * @param options
 */
function addListeners(options) {
    //  subscribe to the active instance id observable; we'll use this to show/hide the popup
    Observables_1.activeID.takeUntil(options.destroy).subscribe(function (id) {
        return toggleDisplay(options, options.id === id);
    });
}
/**
 * toggle the display of the popup
 * @param options
 * @param active
 */
function toggleDisplay(options, active) {
    //  find the popup element for these options
    var element = Find_1.findByRoleWithin(options.elements.selector, Constants_1.pickMeConstants.elements.POPUP);
    //  if the associated instance is not currently active, hide the popup and stop here
    if (!active) return element.style.setProperty('display', 'none');
    //  if the
    element.style.setProperty('display', !active || element.style.display !== 'block' ? 'block' : 'none');
}