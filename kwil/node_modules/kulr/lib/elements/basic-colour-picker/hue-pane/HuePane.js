"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Observables_1 = require("../../../state/Observables");
var Elements_1 = require("./Elements");
var Interactions_1 = require("./Interactions");
/**
 * create and populate a hue-pane element
 * @param options
 */
function createHuePane(options) {
  //  create pane elements, returning the svg colour pane
  //  then add interaction listeners to the SVG
  addListeners(Elements_1.populateHuePane(options), options);
}
exports.createHuePane = createHuePane;
/**
 * add interaction listeners to the pane
 * @param svg
 * @param options
 */
function addListeners(svg, options) {
  Observables_1.activeID.takeUntil(options.destroy).subscribe(function (id) {
    return options.id === id ? activatePane(svg) : deactivatePane(svg);
  });
}
/**
 * activate the pane; start listening for relevant events
 * @param svg
 */
function activatePane(svg) {
  //  subscribe to hue updates, stopping when the active id changes
  Observables_1.observableHue.takeUntil(Observables_1.activeID).subscribe(function (hue) {
    return onHueUpdate(hue);
  });
  //  listen for mouse interactions
  svg.addEventListener('mousedown', Interactions_1.onHuePaneMouseDown);
}
/**
 * deactivate the pane
 * @param svg
 */
function deactivatePane(svg) {
  //  stop listening for mouse interactions
  svg.removeEventListener('mousedown', Interactions_1.onHuePaneMouseDown);
}
/**
 * when the observable hue updates, update the pane
 * @param hue
 */
function onHueUpdate(hue) {
  // console.log(hue);
}