"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tinycolor = require("tinycolor2");
var Observables_1 = require("../state/Observables");
var Subject_1 = require("rxjs/Subject");
//  merge h, s and l into a single observable, then when the combined HSL is updated, parse to hex string
exports.autoObservableHex = Observables_1.observableHue.combineLatest(Observables_1.observableSaturation, Observables_1.observableLightness, hslToHexString);
exports.manualObservableHex = new Subject_1.Subject();
/**
 * convert an HSL object to a hex string
 * @param h
 * @param s
 * @param l
 * @return {string}
 */
function hslToHexString(h, s, l) {
  return tinycolor({ h: h, s: s, l: l }).toHexString();
}
exports.hslToHexString = hslToHexString;
/**
 * convert a hex string to an HSL object
 * @param hex
 */
function inputToHSL(hex) {
  return tinycolor(hex).toHsl();
}
exports.inputToHSL = inputToHSL;
/**
 * set the observable H, S and L values in a single function
 * @param hsl
 */
function setObservableHSL(hsl) {
  Observables_1.observableSaturation.next(hsl.s);
  Observables_1.observableLightness.next(hsl.l);
  Observables_1.observableHue.next(hsl.h);
}
exports.setObservableHSL = setObservableHSL;