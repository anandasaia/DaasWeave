"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var log = require("loglevel");
var Range_1 = require("../../../utils/dom/html/range/Range");
var Constants_1 = require("../../../constants/Constants");
var cachedComputedStyle = void 0;
function sniffFormats() {
    try {
        cachedComputedStyle = getComputedStyleForSelection();
    } catch (e) {
        log.warn('nothing selected');
    }
    var format = void 0;
    format = {
        'bold': sniffStyle('bold'),
        'italic': sniffStyle('italic'),
        'underline': sniffStyle('underline'),
        'strikethrough': sniffStyle('strikethrough'),
        'font-size': sniffNumericFormat(cachedComputedStyle, Constants_1.KWILL_CONSTS.textFormats.FONT_SIZE),
        'font-family': sniffFormat(cachedComputedStyle, Constants_1.KWILL_CONSTS.textFormats.FONT_FAMILY),
        'color': sniffFormat(cachedComputedStyle, Constants_1.KWILL_CONSTS.textFormats.TEXT_COLOUR),
        'text-align': sniffFormat(cachedComputedStyle, Constants_1.KWILL_CONSTS.textFormats.TEXT_ALIGN),
        'line-height': sniffFormat(cachedComputedStyle, Constants_1.KWILL_CONSTS.textFormats.LINE_HEIGHT),
        'letter-spacing': sniffFormat(cachedComputedStyle, Constants_1.KWILL_CONSTS.textFormats.LETTER_SPACING),
        link: sniffHref()
    };
    return format;
}
exports.sniffFormats = sniffFormats;
function getComputedStyleForSelection() {
    return window.getComputedStyle(getFirstSelectedElement());
}
exports.getComputedStyleForSelection = getComputedStyleForSelection;
function sniffStyle(style) {
    var result = void 0;
    Range_1.saveSelection();
    document.designMode = "on";
    Range_1.restoreSelection();
    switch (style) {
        case 'bold':
            result = document.queryCommandState('Bold');
            break;
        case 'italic':
            result = document.queryCommandState('Italic');
            break;
        case 'underline':
            result = document.queryCommandState('Underline');
            break;
        case 'strikethrough':
            result = document.queryCommandState('Strikethrough');
            break;
    }
    Range_1.saveSelection();
    document.designMode = "off";
    Range_1.restoreSelection();
    return result;
}
exports.sniffStyle = sniffStyle;
function sniffFormat(computedStyle, format) {
    return computedStyle.getPropertyValue(format);
}
function sniffNumericFormat(computedStyle, format) {
    return parseInt(computedStyle.getPropertyValue(format));
}
function sniffHref() {
    return getFirstSelectedElement().getAttribute('href');
}
function getFirstSelectedElement() {
    var element = Range_1.getRange().endContainer;
    while (element.nodeType !== 1) {
        element = element.parentElement;
    }
    return element;
}