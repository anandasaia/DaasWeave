"use strict";

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

Object.defineProperty(exports, "__esModule", { value: true });
var SetStyle_1 = require("./SetStyle");
var FormatSniffer_1 = require("../../info/format-sniffer/FormatSniffer");
var Constants_1 = require("../../../constants/Constants");
function setFontSize(fontSize) {
    SetStyle_1.styleSelection(Constants_1.KWILL_CONSTS.textFormats.FONT_SIZE, parseFontSize(fontSize));
}
exports.setFontSize = setFontSize;
function parseFontSize(fontSize) {
    return parseInt(fontSize) + 'px';
}
function extractFontSize(input) {
    var font_size = void 0;
    switch (typeof input === "undefined" ? "undefined" : _typeof(input)) {
        case 'string':
            font_size = isIncremental(input) ? calculateIncrement(input) : input;
            break;
        case 'number':
            font_size = input.toString();
            break;
        case 'object':
            font_size = input.target.value;
            break;
    }
    return font_size;
}
exports.extractFontSize = extractFontSize;
function isIncremental(input) {
    return input.indexOf('-') + input.indexOf('+') < 0;
}
function calculateIncrement(input) {
    return FormatSniffer_1.sniffStyle('font-size') + parseFloat(input);
}