"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var lodash_1 = require("lodash");
var Find_1 = require("../utils/dom/element/Find");
var FrameUtils_1 = require("./FrameUtils");
var TextFormatPopup_1 = require("./ui-components/TextFormatPopup");
var instances = void 0;
function createTextFormatUi(options) {
    var instanceID = getInstanceID(options.popupSelector);
    var instance = getTextFormatUi(instanceID);
    if (instance) return instance;
    if (selectorIsValid(options.popupSelector)) {
        instance = new TextFormatPopup_1.TextFormatPopup(options);
        saveInstance(options.popupSelector + '--popup', instance);
        instance.bootstrap();
        return instance;
    }
}
exports.createTextFormatUi = createTextFormatUi;
function selectorIsValid(selector) {
    var element = void 0;
    try {
        element = Find_1.findOne(selector);
        return element && !FrameUtils_1.isFramed(element);
    } catch (e) {
        return false;
    }
}
function getTextFormatUi(id) {
    return getInstances()[id];
}
exports.getTextFormatUi = getTextFormatUi;
function destroyTextFormatUi(id) {
    getTextFormatUi(id).destroy();
    delete instances[id];
}
exports.destroyTextFormatUi = destroyTextFormatUi;
function destroyAllTextFormatUi() {
    lodash_1.forIn(getInstances(), function (instance, id) {
        return destroyTextFormatUi(id);
    });
}
exports.destroyAllTextFormatUi = destroyAllTextFormatUi;
function saveInstance(id, instance) {
    getInstances()[id] = instance;
}
function getInstances() {
    return instances || (instances = {});
}
function getInstanceID(selector) {
    return selector + '--popup';
}