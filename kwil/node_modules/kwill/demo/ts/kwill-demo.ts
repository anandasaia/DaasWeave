declare var Kwill: any;

//  create the editor instance, passing in options

Kwill.createKwillInstance({
    config:
        {
            debug: true,
            use_iframe: false
        },
    elements:
        {
            editor: '.editable-text--first',
            toolbar: '.kwill-toolbar',
            popup: '.kwill-text-format-popup'
        },
    style:
        {

        },
    interaction:
        {
            show_popup_on_click: false,
            expand_x: false,
            expand_y: false
        },
    content:
        {

        }
});

// Kwill.createKwillInstance({
//     instanceID: 'custom-instanceID',
//     config:
//         {
//             debug: true,
//             use_iframe: false
//         },
//     elements:
//         {
//             editor: <HTMLElement>document.getElementsByClassName('text-element-demo__editable-element').item(1),
//             toolbar: '.kwill-toolbar',
//             popup: '.kwill-popup'
//         },
//     style:
//         {
//
//         },
//     interaction:
//         {
//             show_popup_on_click: false,
//             expand_x: false,
//             expand_y: false
//         },
//     content:
//         {
//             defaultHtml: "<p>This text has been set as default by the editor.</p>"
//         }
// });


//  listen for text editing events

// Kwill.getSignal(Kwill.constants.events.EDIT_PROGRESS).add(() => console.log('edit progress:', Kwill.getContent('my-instanceID')));
// Kwill.getSignal(Kwill.constants.events.EDIT_COMPLETE).add(() => console.log('edit complete:', Kwill.getContent('my-instanceID')));

//

// Kwill.getSignal(Kwill.constants.events.SHOW_TEXT_FORMAT_POPUP).add((event: MouseEvent) =>
// {
//     let editorPopup:HTMLElement;
//
//     //  get the text format popup
//
//     editorPopup = <HTMLElement>document.getElementsByClassName('kwill-popup').item(0);
//
//     //  position the popup
//
//     editorPopup.style.top = event.pageY + 'px';
//     editorPopup.style.left = event.pageX + 'px';
//
//     //  add an active class
//
//     editorPopup.classList.add('active');
// });
//
// Kwill.getSignal(Kwill.constants.events.HIDE_TEXT_FORMAT_POPUP).add(function()
// {
//     document.getElementsByClassName('kwill-popup').item(0).classList.remove('active')
// });
//
//
// //  add text format popup show and hide listeners
//
// Kwill.getSignal('showTextFormatPopup').add(function()
// {
//     document.getElementsByClassName('kwill-popup').item(0).classList.add('active')
// });
//
// Kwill.getSignal('hideTextFormatPopup').add(function()
// {
//     document.getElementsByClassName('kwill-popup').item(0).classList.remove('active')
// });