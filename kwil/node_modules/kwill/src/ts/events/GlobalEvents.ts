import * as log from 'loglevel';
import {forIn} from 'lodash';
import {Signal} from "signals";


let instances: any;


/**
 * get a global signal by id
 * @param signalID
 * @returns {Signal}
 */
export function getSignal(signalID: string) : Signal
{
    return getInstances()[signalID] || createSignal(signalID);
}


/**
 * create and save a new global signal
 * @param signalID
 * @returns {Signal}
 */
function createSignal(signalID: string) : Signal
{
    return getInstances()[signalID] = new Signal();
}


/**
 * get the signals instances dictionary object
 * @returns {any|{}}
 */
function getInstances() : { [signalID: string]: Signal }
{
    return instances || (instances = {});
}


/**
 * destroy all global signals
 */
export function destroyAllGlobalSignals()
{
    //  dispose of all signals

    forIn(instances, (signal: Signal, id: string) => signal.dispose());

    //  clear the signal instances object

    instances = null;
}