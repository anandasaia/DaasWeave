/**
 * add a CSS class to an element
 * @param element
 * @param className
 */
export function addClass(element: Element, className: string)
{
    //  check we have a valid element

    if ( ! element || ! element.classList) return false;

    //  add class name to list

    element.classList.add(className);
}


/**
 * remove a CSS class from an element
 * @param element
 * @param className
 * @returns {boolean}
 */
export function removeClass(element: HTMLElement, className: string)
{
    //  check we have a valid element

    if ( ! element || element.classList) return false;

    //  remove class name from list

    element.classList.remove(className);
}


/**
 * toggle the presence of a CSS class on an element
 * @param element
 * @param className
 * @param toggle
 */
export function toggleClass(element: HTMLElement, className: string, toggle?: boolean)
{
    //TODO  allow manual override of toggle value

    if (hasClass(element, className) === false)
    {
        addClass(element, className);
    }
    else
    {
        removeClass(element, className)
    }
}


/**
 * check if an element already has a particular class name
 * @param element
 * @param className
 * @returns {any}
 */
export function hasClass(element: HTMLElement, className: string) : boolean
{
    //  check we have a valid element and a valid class list

    if ( ! element || ! element.classList) return false;

    //  check whether the element's class list contains the provided class name

    return element.classList.contains(className);
}