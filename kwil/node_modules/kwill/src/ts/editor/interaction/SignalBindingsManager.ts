import {SignalBinding} from "signals";

var instances: any;


/**
 * save a signal binding reference for an editor instance
 * @param binding
 * @param instanceID
 */
export function saveSignalBinding(binding: SignalBinding, instanceID: string)
{
    getInstanceBindings(instanceID).push(binding);
}


/**
 * unbind all bindings for an instance
 * @param instanceID
 */
export function clearSignalBindings(instanceID: string)
{
    //  unbind all bindings

    getInstanceBindings(instanceID).map((binding: SignalBinding) => binding.detach());
}


/**
 * retrieve (or create) the array of signal bindings for an editor instance
 * @returns {any|Array}
 * @param instanceID
 */
function getInstanceBindings(instanceID: string) : SignalBinding[]
{
    return getInstances()[instanceID] || (getInstances()[instanceID] = []);
}


/**
 * get the instances dictionary
 * @returns {any|{}}
 */
function getInstances() : any
{
    return instances || (instances = {});
}