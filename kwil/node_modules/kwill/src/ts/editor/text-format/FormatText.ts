import {KWILL_CONSTS} from "../../constants/Constants";
import {setBackgroundColour, setTextColour} from "./formats/FontColour";
import {setLetterSpacing} from "./formats/LetterSpacing";
import {setLineHeight} from "./formats/LineHeight";
import {setFontSize} from "./formats/FontSize";
import {setFontFamily} from "./formats/FontFamily";
import {setTextAlign} from "./formats/TextAlign";
import {toggleStrikethrough} from "./formats/Strikethrough";
import {setLink} from "./links/AddLink";
import {toggleBold} from "./formats/Bold";
import {toggleItalic} from "./formats/Italic";
import {toggleUnderline} from "./formats/Underline";
import {clearStyles} from './formats/ClearStyles';

export interface ITextFormat
{
    [id: string]: any;

    bold: boolean;
    italic: boolean;
    strikethrough: boolean;
    underline: boolean;
    'font-size': number;
    color: string;
    'font-family': string;
    'text-align': string;
    'letter-spacing': string;
    'line-height': string;
    link: string;
}



/**
 * format text
 * @param format
 * @param value
 * @returns {undefined}
 */
export function formatText(format: string, value: any)
{
    //  focus the main window; Edge doesn't let us use execCommand when the main window isn't focusses

    window.focus();

    //  set the relevant format/value on the current selection

    switch (format)
    {
        //  text styles

        case KWILL_CONSTS.textFormats.BOLD:

            return toggleBold();

        case KWILL_CONSTS.textFormats.ITALIC:

            return toggleItalic();

        case KWILL_CONSTS.textFormats.UNDERLINE:

            return toggleUnderline();

        case KWILL_CONSTS.textFormats.STRIKETHROUGH:

            return toggleStrikethrough();

        //  text-align

        case KWILL_CONSTS.textFormats.TEXT_ALIGN:

            return setTextAlign(value);

        //  font-family

        case KWILL_CONSTS.textFormats.FONT_FAMILY:

            return setFontFamily(value);

        //  font-size

        case KWILL_CONSTS.textFormats.FONT_SIZE:

            return setFontSize(value);

        //  spacing

        case KWILL_CONSTS.textFormats.LINE_HEIGHT:

            return setLineHeight(value);

        case KWILL_CONSTS.textFormats.LETTER_SPACING:

            return setLetterSpacing(value);

        //  colour

        case KWILL_CONSTS.textFormats.TEXT_COLOUR:

            return setTextColour(value);

        case KWILL_CONSTS.textFormats.BACKGROUND_COLOUR:

            return setBackgroundColour(value);

        //  link

        case KWILL_CONSTS.textFormats.LINK:

            return setLink(value);

        //  clear styles

        case KWILL_CONSTS.textFormats.CLEAR_STYLE:

            return clearStyles();
    }
}