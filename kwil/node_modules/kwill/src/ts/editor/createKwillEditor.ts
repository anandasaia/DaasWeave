import {areOptionsValid, populateDefaultEditorOptions} from "../options/ValidateOptions";
import {oneTimeSetup} from "../globals/OneTimeSetup";
import {createTextEditor, TextEditor} from "./TextEditor";


export interface IKwillInstanceOptions
{
    id?: string;
    config?:
        {
            debug?: boolean;
        }
    selector?: string | HTMLElement;
    style?:
        {
            textAlign?: string;
            lineHeight?: string | number;
            letterSpacing?: string | number;
        },
    interaction?:
        {
            show_popup_on_click?: boolean;
            expand_x?: boolean;
            expand_y?: boolean;
        },
    content?:
        {
            defaultHtml?: string;
        }
}


/**
 * create a new instance of the kwill editor
 * @param options
 * @return {IEditorInstance}
 */
export function createKwillEditor(options: IKwillInstanceOptions) : TextEditor
{
    //  check whether our options are valid

    if ( ! areOptionsValid(options)) return;

    //  do any one-time init we need to

    oneTimeSetup(options);

    //  add any missing default options

    populateDefaultEditorOptions(options);

    //  create and return a new text editor instance

    return createTextEditor(options.id, options);
}